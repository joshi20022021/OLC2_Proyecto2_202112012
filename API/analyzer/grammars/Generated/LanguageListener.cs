//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LanguageParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public interface ILanguageListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterPrograma([NotNull] LanguageParser.ProgramaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.programa"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitPrograma([NotNull] LanguageParser.ProgramaContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.funcionMain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionMain([NotNull] LanguageParser.FuncionMainContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.funcionMain"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionMain([NotNull] LanguageParser.FuncionMainContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBreakStmt([NotNull] LanguageParser.BreakStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.breakStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBreakStmt([NotNull] LanguageParser.BreakStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.continueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterContinueStmt([NotNull] LanguageParser.ContinueStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.continueStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitContinueStmt([NotNull] LanguageParser.ContinueStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterReturnStmt([NotNull] LanguageParser.ReturnStmtContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.returnStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitReturnStmt([NotNull] LanguageParser.ReturnStmtContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.bloque"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBloque([NotNull] LanguageParser.BloqueContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.bloque"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBloque([NotNull] LanguageParser.BloqueContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSentencia([NotNull] LanguageParser.SentenciaContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.sentencia"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSentencia([NotNull] LanguageParser.SentenciaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>IfElse</c>
	/// labeled alternative in <see cref="LanguageParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIfElse([NotNull] LanguageParser.IfElseContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>IfElse</c>
	/// labeled alternative in <see cref="LanguageParser.ifStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIfElse([NotNull] LanguageParser.IfElseContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.declaracion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclaracion([NotNull] LanguageParser.DeclaracionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.declaracion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclaracion([NotNull] LanguageParser.DeclaracionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Asignar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignar([NotNull] LanguageParser.AsignarContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Asignar</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignar([NotNull] LanguageParser.AsignarContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AsignarSlice</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignarSlice([NotNull] LanguageParser.AsignarSliceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AsignarSlice</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignarSlice([NotNull] LanguageParser.AsignarSliceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AsignarMatriz</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignarMatriz([NotNull] LanguageParser.AsignarMatrizContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AsignarMatriz</c>
	/// labeled alternative in <see cref="LanguageParser.asignacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignarMatriz([NotNull] LanguageParser.AsignarMatrizContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTipo([NotNull] LanguageParser.TipoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.tipo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTipo([NotNull] LanguageParser.TipoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Switch</c>
	/// labeled alternative in <see cref="LanguageParser.switchStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSwitch([NotNull] LanguageParser.SwitchContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Switch</c>
	/// labeled alternative in <see cref="LanguageParser.switchStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSwitch([NotNull] LanguageParser.SwitchContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCaseBlock([NotNull] LanguageParser.CaseBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.caseBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCaseBlock([NotNull] LanguageParser.CaseBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.defaultBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDefaultBlock([NotNull] LanguageParser.DefaultBlockContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.defaultBlock"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDefaultBlock([NotNull] LanguageParser.DefaultBlockContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForCondicion</c>
	/// labeled alternative in <see cref="LanguageParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForCondicion([NotNull] LanguageParser.ForCondicionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForCondicion</c>
	/// labeled alternative in <see cref="LanguageParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForCondicion([NotNull] LanguageParser.ForCondicionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForClasico</c>
	/// labeled alternative in <see cref="LanguageParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForClasico([NotNull] LanguageParser.ForClasicoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForClasico</c>
	/// labeled alternative in <see cref="LanguageParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForClasico([NotNull] LanguageParser.ForClasicoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ForRange</c>
	/// labeled alternative in <see cref="LanguageParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterForRange([NotNull] LanguageParser.ForRangeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ForRange</c>
	/// labeled alternative in <see cref="LanguageParser.forStmt"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitForRange([NotNull] LanguageParser.ForRangeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Incremento</c>
	/// labeled alternative in <see cref="LanguageParser.contador"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIncremento([NotNull] LanguageParser.IncrementoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Incremento</c>
	/// labeled alternative in <see cref="LanguageParser.contador"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIncremento([NotNull] LanguageParser.IncrementoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Decremento</c>
	/// labeled alternative in <see cref="LanguageParser.contador"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDecremento([NotNull] LanguageParser.DecrementoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Decremento</c>
	/// labeled alternative in <see cref="LanguageParser.contador"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDecremento([NotNull] LanguageParser.DecrementoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.sliceLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSliceLiteral([NotNull] LanguageParser.SliceLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.sliceLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSliceLiteral([NotNull] LanguageParser.SliceLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.listLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterListLiteral([NotNull] LanguageParser.ListLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.listLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitListLiteral([NotNull] LanguageParser.ListLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.sliceElemento"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSliceElemento([NotNull] LanguageParser.SliceElementoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.sliceElemento"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSliceElemento([NotNull] LanguageParser.SliceElementoContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.funcionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionCall([NotNull] LanguageParser.FuncionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.funcionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionCall([NotNull] LanguageParser.FuncionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.parametros"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParametros([NotNull] LanguageParser.ParametrosContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.parametros"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParametros([NotNull] LanguageParser.ParametrosContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.parametro"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParametro([NotNull] LanguageParser.ParametroContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.parametro"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParametro([NotNull] LanguageParser.ParametroContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Imprime</c>
	/// labeled alternative in <see cref="LanguageParser.imprimir"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterImprime([NotNull] LanguageParser.ImprimeContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Imprime</c>
	/// labeled alternative in <see cref="LanguageParser.imprimir"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitImprime([NotNull] LanguageParser.ImprimeContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>StructDeclaracion</c>
	/// labeled alternative in <see cref="LanguageParser.declaracionStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStructDeclaracion([NotNull] LanguageParser.StructDeclaracionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>StructDeclaracion</c>
	/// labeled alternative in <see cref="LanguageParser.declaracionStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStructDeclaracion([NotNull] LanguageParser.StructDeclaracionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.asignacionAtributo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAsignacionAtributo([NotNull] LanguageParser.AsignacionAtributoContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.asignacionAtributo"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAsignacionAtributo([NotNull] LanguageParser.AsignacionAtributoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Atributo</c>
	/// labeled alternative in <see cref="LanguageParser.atributoStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtributo([NotNull] LanguageParser.AtributoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Atributo</c>
	/// labeled alternative in <see cref="LanguageParser.atributoStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtributo([NotNull] LanguageParser.AtributoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MetodoStruct</c>
	/// labeled alternative in <see cref="LanguageParser.funcionStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMetodoStruct([NotNull] LanguageParser.MetodoStructContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MetodoStruct</c>
	/// labeled alternative in <see cref="LanguageParser.funcionStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMetodoStruct([NotNull] LanguageParser.MetodoStructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.funcionDeclaracion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionDeclaracion([NotNull] LanguageParser.FuncionDeclaracionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.funcionDeclaracion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionDeclaracion([NotNull] LanguageParser.FuncionDeclaracionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.expresionLiteralStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpresionLiteralStruct([NotNull] LanguageParser.ExpresionLiteralStructContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.expresionLiteralStruct"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpresionLiteralStruct([NotNull] LanguageParser.ExpresionLiteralStructContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="LanguageParser.atributosInicializacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtributosInicializacion([NotNull] LanguageParser.AtributosInicializacionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LanguageParser.atributosInicializacion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtributosInicializacion([NotNull] LanguageParser.AtributosInicializacionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncionParseFloat</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionParseFloat([NotNull] LanguageParser.FuncionParseFloatContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncionParseFloat</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionParseFloat([NotNull] LanguageParser.FuncionParseFloatContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparacionIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparacionIgual([NotNull] LanguageParser.ComparacionIgualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparacionIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparacionIgual([NotNull] LanguageParser.ComparacionIgualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOr([NotNull] LanguageParser.OrContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Or</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOr([NotNull] LanguageParser.OrContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncionAppend</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionAppend([NotNull] LanguageParser.FuncionAppendContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncionAppend</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionAppend([NotNull] LanguageParser.FuncionAppendContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncionAtoi</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionAtoi([NotNull] LanguageParser.FuncionAtoiContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncionAtoi</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionAtoi([NotNull] LanguageParser.FuncionAtoiContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralEntero</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralEntero([NotNull] LanguageParser.LiteralEnteroContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralEntero</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralEntero([NotNull] LanguageParser.LiteralEnteroContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Multiplicacion</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicacion([NotNull] LanguageParser.MultiplicacionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Multiplicacion</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicacion([NotNull] LanguageParser.MultiplicacionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralVerdadero</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralVerdadero([NotNull] LanguageParser.LiteralVerdaderoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralVerdadero</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralVerdadero([NotNull] LanguageParser.LiteralVerdaderoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AccesoSlice</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccesoSlice([NotNull] LanguageParser.AccesoSliceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MenorOIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenorOIgual([NotNull] LanguageParser.MenorOIgualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MenorOIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenorOIgual([NotNull] LanguageParser.MenorOIgualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivision([NotNull] LanguageParser.DivisionContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Division</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivision([NotNull] LanguageParser.DivisionContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Resta</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterResta([NotNull] LanguageParser.RestaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Resta</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitResta([NotNull] LanguageParser.RestaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ComparacionDiferente</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparacionDiferente([NotNull] LanguageParser.ComparacionDiferenteContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ComparacionDiferente</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparacionDiferente([NotNull] LanguageParser.ComparacionDiferenteContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralCadena</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralCadena([NotNull] LanguageParser.LiteralCadenaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralCadena</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralCadena([NotNull] LanguageParser.LiteralCadenaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Parentesis</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParentesis([NotNull] LanguageParser.ParentesisContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Parentesis</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParentesis([NotNull] LanguageParser.ParentesisContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModulo([NotNull] LanguageParser.ModuloContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Modulo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModulo([NotNull] LanguageParser.ModuloContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncionLlamada</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionLlamada([NotNull] LanguageParser.FuncionLlamadaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncionLlamada</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionLlamada([NotNull] LanguageParser.FuncionLlamadaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralRune</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralRune([NotNull] LanguageParser.LiteralRuneContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralRune</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralRune([NotNull] LanguageParser.LiteralRuneContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>AccesoSlice2D</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAccesoSlice2D([NotNull] LanguageParser.AccesoSlice2DContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AccesoSlice2D</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAccesoSlice2D([NotNull] LanguageParser.AccesoSlice2DContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncionTypeOf</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionTypeOf([NotNull] LanguageParser.FuncionTypeOfContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncionTypeOf</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionTypeOf([NotNull] LanguageParser.FuncionTypeOfContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralFlotante</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralFlotante([NotNull] LanguageParser.LiteralFlotanteContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralFlotante</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralFlotante([NotNull] LanguageParser.LiteralFlotanteContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncionJoin</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionJoin([NotNull] LanguageParser.FuncionJoinContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncionJoin</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionJoin([NotNull] LanguageParser.FuncionJoinContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Suma</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSuma([NotNull] LanguageParser.SumaContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Suma</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSuma([NotNull] LanguageParser.SumaContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNot([NotNull] LanguageParser.NotContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Not</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNot([NotNull] LanguageParser.NotContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpresionAccesoAtributo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpresionAccesoAtributo([NotNull] LanguageParser.ExpresionAccesoAtributoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpresionAccesoAtributo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpresionAccesoAtributo([NotNull] LanguageParser.ExpresionAccesoAtributoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncionLen</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionLen([NotNull] LanguageParser.FuncionLenContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncionLen</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionLen([NotNull] LanguageParser.FuncionLenContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>ExpresionStructLiteral</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpresionStructLiteral([NotNull] LanguageParser.ExpresionStructLiteralContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ExpresionStructLiteral</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpresionStructLiteral([NotNull] LanguageParser.ExpresionStructLiteralContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>FuncionIndex</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFuncionIndex([NotNull] LanguageParser.FuncionIndexContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>FuncionIndex</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFuncionIndex([NotNull] LanguageParser.FuncionIndexContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Slice</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSlice([NotNull] LanguageParser.SliceContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Slice</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSlice([NotNull] LanguageParser.SliceContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAnd([NotNull] LanguageParser.AndContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>And</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAnd([NotNull] LanguageParser.AndContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralNulo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralNulo([NotNull] LanguageParser.LiteralNuloContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralNulo</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralNulo([NotNull] LanguageParser.LiteralNuloContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MayorOIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMayorOIgual([NotNull] LanguageParser.MayorOIgualContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MayorOIgual</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMayorOIgual([NotNull] LanguageParser.MayorOIgualContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>LiteralFalso</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLiteralFalso([NotNull] LanguageParser.LiteralFalsoContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>LiteralFalso</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLiteralFalso([NotNull] LanguageParser.LiteralFalsoContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MayorQue</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMayorQue([NotNull] LanguageParser.MayorQueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MayorQue</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMayorQue([NotNull] LanguageParser.MayorQueContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Identificador</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIdentificador([NotNull] LanguageParser.IdentificadorContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Identificador</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIdentificador([NotNull] LanguageParser.IdentificadorContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>MenorQue</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMenorQue([NotNull] LanguageParser.MenorQueContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MenorQue</c>
	/// labeled alternative in <see cref="LanguageParser.expresion"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMenorQue([NotNull] LanguageParser.MenorQueContext context);
}
